/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IChefIncentivesLiteInterface extends ethers.utils.Interface {
  functions: {
    "poolInfo(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "poolInfo", values: [string]): string;

  decodeFunctionResult(functionFragment: "poolInfo", data: BytesLike): Result;

  events: {};
}

export class IChefIncentivesLite extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IChefIncentivesLiteInterface;

  functions: {
    poolInfo(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      totalSupply: BigNumber;
      lastRewardTime: BigNumber;
      accKlapPerShare: BigNumber;
      accKlapPerFactorShare: BigNumber;
      sumOfFactors: BigNumber;
      onwardIncentives: string;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: string;
    }>;

    "poolInfo(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      totalSupply: BigNumber;
      lastRewardTime: BigNumber;
      accKlapPerShare: BigNumber;
      accKlapPerFactorShare: BigNumber;
      sumOfFactors: BigNumber;
      onwardIncentives: string;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: string;
    }>;
  };

  poolInfo(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    totalSupply: BigNumber;
    lastRewardTime: BigNumber;
    accKlapPerShare: BigNumber;
    accKlapPerFactorShare: BigNumber;
    sumOfFactors: BigNumber;
    onwardIncentives: string;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: string;
  }>;

  "poolInfo(address)"(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    totalSupply: BigNumber;
    lastRewardTime: BigNumber;
    accKlapPerShare: BigNumber;
    accKlapPerFactorShare: BigNumber;
    sumOfFactors: BigNumber;
    onwardIncentives: string;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: string;
  }>;

  callStatic: {
    poolInfo(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      totalSupply: BigNumber;
      lastRewardTime: BigNumber;
      accKlapPerShare: BigNumber;
      accKlapPerFactorShare: BigNumber;
      sumOfFactors: BigNumber;
      onwardIncentives: string;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: string;
    }>;

    "poolInfo(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      totalSupply: BigNumber;
      lastRewardTime: BigNumber;
      accKlapPerShare: BigNumber;
      accKlapPerFactorShare: BigNumber;
      sumOfFactors: BigNumber;
      onwardIncentives: string;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: string;
    }>;
  };

  filters: {};

  estimateGas: {
    poolInfo(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    "poolInfo(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    poolInfo(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "poolInfo(address)"(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
