/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewardClaimer } from "./RewardClaimer";

export class RewardClaimerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _klap: string,
    _mintingContract: string,
    overrides?: Overrides
  ): Promise<RewardClaimer> {
    return super.deploy(
      _klap,
      _mintingContract,
      overrides || {}
    ) as Promise<RewardClaimer>;
  }
  getDeployTransaction(
    _klap: string,
    _mintingContract: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_klap, _mintingContract, overrides || {});
  }
  attach(address: string): RewardClaimer {
    return super.attach(address) as RewardClaimer;
  }
  connect(signer: Signer): RewardClaimerFactory {
    return super.connect(signer) as RewardClaimerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardClaimer {
    return new Contract(address, _abi, signerOrProvider) as RewardClaimer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_klap",
        type: "address",
      },
      {
        internalType: "contract IMultiFeeDistribution",
        name: "_mintingContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimKlap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimKlay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimKLAP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimKLAY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "klap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "klapClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "klapToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "klayToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingContract",
    outputs: [
      {
        internalType: "contract IMultiFeeDistribution",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "rescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_klap",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "setKLAPAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "setKLAYAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isClaimable",
        type: "bool",
      },
    ],
    name: "setKlapClaimable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMultiFeeDistribution",
        name: "_mintingContract",
        type: "address",
      },
    ],
    name: "setMintingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweepAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalKlapAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalKlayAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112d93803806112d98339818101604052604081101561003357600080fd5b5080516020909101516001600090815561004b6100ca565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100ce565b3390565b6111fc806100dd6000396000f3fe6080604052600436106101235760003560e01c8063af31e75c116100a0578063d2f6f67d11610064578063d2f6f67d1461053a578063df0c18981461054f578063e30081a014610582578063ea3ab802146105b5578063f2fde38b146105de5761012a565b8063af31e75c146104a2578063b5e314bd146104b7578063c56e1375146104ea578063cc56c8201461051d578063d0e30db0146105325761012a565b8063715018a6116100e7578063715018a6146104035780637a4e4ecf14610418578063805e8066146104515780638da5cb5b14610466578063aa78ef481461047b5761012a565b806333135d181461012f5780634bb492c214610261578063628f36b01461028d57806366f15cb4146103bd57806367260226146103d25761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061025f6004803603604081101561015257600080fd5b810190602081018135600160201b81111561016c57600080fd5b82018360208201111561017e57600080fd5b803590602001918460208302840111600160201b8311171561019f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101ee57600080fd5b82018360208201111561020057600080fd5b803590602001918460208302840111600160201b8311171561022157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610611945050505050565b005b34801561026d57600080fd5b5061025f6004803603602081101561028457600080fd5b50351515610722565b34801561029957600080fd5b5061025f600480360360408110156102b057600080fd5b810190602081018135600160201b8111156102ca57600080fd5b8201836020820111156102dc57600080fd5b803590602001918460208302840111600160201b831117156102fd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561034c57600080fd5b82018360208201111561035e57600080fd5b803590602001918460208302840111600160201b8311171561037f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506107a2945050505050565b3480156103c957600080fd5b5061025f6108ae565b3480156103de57600080fd5b506103e7610943565b604080516001600160a01b039092168252519081900360200190f35b34801561040f57600080fd5b5061025f610952565b34801561042457600080fd5b5061025f6004803603604081101561043b57600080fd5b506001600160a01b0381351690602001356109fe565b34801561045d57600080fd5b5061025f610adf565b34801561047257600080fd5b506103e7610c9f565b34801561048757600080fd5b50610490610cae565b60408051918252519081900360200190f35b3480156104ae57600080fd5b5061025f610cb4565b3480156104c357600080fd5b50610490600480360360208110156104da57600080fd5b50356001600160a01b0316610f26565b3480156104f657600080fd5b5061025f6004803603602081101561050d57600080fd5b50356001600160a01b0316610f38565b34801561052957600080fd5b50610490610fbc565b61025f610fc2565b34801561054657600080fd5b506103e7610fc4565b34801561055b57600080fd5b506104906004803603602081101561057257600080fd5b50356001600160a01b0316610fd3565b34801561058e57600080fd5b5061025f600480360360208110156105a557600080fd5b50356001600160a01b0316610fe5565b3480156105c157600080fd5b506105ca611069565b604080519115158252519081900360200190f35b3480156105ea57600080fd5b5061025f6004803603602081101561060157600080fd5b50356001600160a01b0316611079565b61061961117c565b6001600160a01b031661062a610c9f565b6001600160a01b031614610673576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b80518251146106c1576040805162461bcd60e51b81526020600482015260156024820152740c2e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b604482015290519081900360640190fd5b60005b825181101561071d578181815181106106d957fe5b6020026020010151600660008584815181106106f157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020556001016106c4565b505050565b61072a61117c565b6001600160a01b031661073b610c9f565b6001600160a01b031614610784576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b60038054911515600160a01b0260ff60a01b19909216919091179055565b6107aa61117c565b6001600160a01b03166107bb610c9f565b6001600160a01b031614610804576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b8051825114610852576040805162461bcd60e51b81526020600482015260156024820152740c2e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b604482015290519081900360640190fd5b60005b825181101561071d5781818151811061086a57fe5b60200260200101516007600085848151811061088257fe5b6020908102919091018101516001600160a01b0316825281019190915260400160002055600101610855565b6108b661117c565b6001600160a01b03166108c7610c9f565b6001600160a01b031614610910576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b6040514790339082156108fc029083906000818181858888f1935050505015801561093f573d6000803e3d6000fd5b5050565b6002546001600160a01b031681565b61095a61117c565b6001600160a01b031661096b610c9f565b6001600160a01b0316146109b4576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b610a0661117c565b6001600160a01b0316610a17610c9f565b6001600160a01b031614610a60576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b158015610aaf57600080fd5b505af1158015610ac3573d6000803e3d6000fd5b505050506040513d6020811015610ad957600080fd5b50505050565b60026000541415610b37576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600055600354600160a01b900460ff16610b93576040805162461bcd60e51b815260206004820152601660248201527512d31054081b9bdd0818db185a5b58589b19481e595d60521b604482015290519081900360640190fd5b3360009081526007602052604090205480610be7576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b604482015290519081900360640190fd5b3360008181526007602052604080822082905560035481516340c10f1960e01b815260048101949094526024840185905290516001600160a01b03909116926340c10f1992604480830193919282900301818387803b158015610c4957600080fd5b505af1158015610c5d573d6000803e3d6000fd5b50506040805184815290513393507f7e48f97d04b93dd608ae12920c320c44c7e7e9562671df2eab34491a3db8270d92509081900360200190a2506001600055565b6001546001600160a01b031690565b60055481565b60026000541415610d0c576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260009081553381526006602052604090205480610d64576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd1a1a5b99c81d1bc81cd95b99608a1b604482015290519081900360640190fd5b3360009081526006602052604081205547811115610e4f576040516000908190339047908381818185875af1925050503d8060008114610dc0576040519150601f19603f3d011682016040523d82523d6000602084013e610dc5565b606091505b509150915081610e12576040805162461bcd60e51b81526020600482015260136024820152726661696c656420746f2073656e64204b4c415960681b604482015290519081900360640190fd5b60408051478152905133917f71caa0eda8c1acb2568d0f77894b0e42b69c83af8754797d0c2f0ac262d115f6919081900360200190a25050610f1e565b6040516000908190339084908381818185875af1925050503d8060008114610e93576040519150601f19603f3d011682016040523d82523d6000602084013e610e98565b606091505b509150915081610ee5576040805162461bcd60e51b81526020600482015260136024820152726661696c656420746f2073656e64204b4c415960681b604482015290519081900360640190fd5b60408051848152905133917f71caa0eda8c1acb2568d0f77894b0e42b69c83af8754797d0c2f0ac262d115f6919081900360200190a250505b506001600055565b60076020526000908152604090205481565b610f4061117c565b6001600160a01b0316610f51610c9f565b6001600160a01b031614610f9a576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b565b6003546001600160a01b031681565b60066020526000908152604090205481565b610fed61117c565b6001600160a01b0316610ffe610c9f565b6001600160a01b031614611047576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600354600160a01b900460ff1681565b61108161117c565b6001600160a01b0316611092610c9f565b6001600160a01b0316146110db576040805162461bcd60e51b815260206004820181905260248201526000805160206111a7833981519152604482015290519081900360640190fd5b6001600160a01b0381166111205760405162461bcd60e51b81526004018080602001828103825260268152602001806111816026913960400191505060405180910390fd5b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212204ff8cec2683acc92456069fc7c8b2de669457f27106e147ec6107767e4c49aaf64736f6c63430007060033";
