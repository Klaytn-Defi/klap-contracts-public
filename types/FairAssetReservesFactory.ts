/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { FairAssetReserves } from "./FairAssetReserves";

export class FairAssetReservesFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _base: string,
    _lp_token: string,
    overrides?: Overrides
  ): Promise<FairAssetReserves> {
    return super.deploy(
      _base,
      _lp_token,
      overrides || {}
    ) as Promise<FairAssetReserves>;
  }
  getDeployTransaction(
    _base: string,
    _lp_token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_base, _lp_token, overrides || {});
  }
  attach(address: string): FairAssetReserves {
    return super.attach(address) as FairAssetReserves;
  }
  connect(signer: Signer): FairAssetReservesFactory {
    return super.connect(signer) as FairAssetReservesFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FairAssetReserves {
    return new Contract(address, _abi, signerOrProvider) as FairAssetReserves;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lp_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getFairValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lp_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lp_token",
        type: "address",
      },
    ],
    name: "updateLPToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
    ],
    name: "updateOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b37380380610b378339818101604052604081101561003357600080fd5b50805160209091015160006100466100c1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100c5565b3390565b610a63806100d46000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806382c630661161006657806382c630661461011b5780638da5cb5b14610123578063b3596f071461012b578063f2fde38b14610151578063f60615261461017757610093565b80631cb44dfc146100985780631e98447b146100c05780635001f3b5146100ef578063715018a614610113575b600080fd5b6100be600480360360208110156100ae57600080fd5b50356001600160a01b031661019d565b005b6100dd600480360360208110156100d657600080fd5b5035610221565b60408051918252519081900360200190f35b6100f76105c6565b604080516001600160a01b039092168252519081900360200190f35b6100be6105d5565b6100f7610681565b6100f7610690565b6100dd6004803603602081101561014157600080fd5b50356001600160a01b031661069f565b6100be6004803603602081101561016757600080fd5b50356001600160a01b0316610722565b6100be6004803603602081101561018d57600080fd5b50356001600160a01b0316610824565b6101a56108a8565b6001600160a01b03166101b6610690565b6001600160a01b0316146101ff576040805162461bcd60e51b81526020600482018190526024820152600080516020610a0e833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d602081101561029c57600080fd5b50516002546040805163d21220a760e01b815290519293506000926001600160a01b039092169163d21220a791600480820192602092909190829003018186803b1580156102e957600080fd5b505afa1580156102fd573d6000803e3d6000fd5b505050506040513d602081101561031357600080fd5b5051600254604080516318160ddd60e01b815290519293506000926001600160a01b03909216916318160ddd91600480820192602092909190829003018186803b15801561036057600080fd5b505afa158015610374573d6000803e3d6000fd5b505050506040513d602081101561038a57600080fd5b505160025460408051630240bc6b60e21b8152905192935060009283926001600160a01b031691630902f1ac916004808301926060929190829003018186803b1580156103d657600080fd5b505afa1580156103ea573d6000803e3d6000fd5b505050506040513d606081101561040057600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169350169050600061043e846104388a670de0b6b3a76400006108ac565b9061090e565b90506000610458670de0b6b3a764000061043886856108ac565b90506000610472670de0b6b3a764000061043886866108ac565b9050600061048861048384846108ac565b610975565b6001546040805163b3596f0760e01b81526001600160a01b038d811660048301529151939450600093919092169163b3596f07916024808301926020929190829003018186803b1580156104db57600080fd5b505afa1580156104ef573d6000803e3d6000fd5b505050506040513d602081101561050557600080fd5b50516001546040805163b3596f0760e01b81526001600160a01b038d811660048301529151939450600093919092169163b3596f07916024808301926020929190829003018186803b15801561055a57600080fd5b505afa15801561056e573d6000803e3d6000fd5b505050506040513d602081101561058457600080fd5b50519050600061059761048384846108ac565b90506105b28a610438836105ac8860026108ac565b906108ac565b9c505050505050505050505050505b919050565b6001546001600160a01b031681565b6105dd6108a8565b6001600160a01b03166105ee610690565b6001600160a01b031614610637576040805162461bcd60e51b81526020600482018190526024820152600080516020610a0e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b031681565b6000546001600160a01b031690565b6001546040805163b3596f0760e01b81526001600160a01b0384811660048301529151600093929092169163b3596f0791602480820192602092909190829003018186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d602081101561071a57600080fd5b505192915050565b61072a6108a8565b6001600160a01b031661073b610690565b6001600160a01b031614610784576040805162461bcd60e51b81526020600482018190526024820152600080516020610a0e833981519152604482015290519081900360640190fd5b6001600160a01b0381166107c95760405162461bcd60e51b81526004018080602001828103825260268152602001806109c76026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b61082c6108a8565b6001600160a01b031661083d610690565b6001600160a01b031614610886576040805162461bcd60e51b81526020600482018190526024820152600080516020610a0e833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000826108bb57506000610908565b828202828482816108c857fe5b04146109055760405162461bcd60e51b81526004018080602001828103825260218152602001806109ed6021913960400191505060405180910390fd5b90505b92915050565b6000808211610964576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161096d57fe5b049392505050565b600060038211156109b8575080600160028204015b818110156109b2578091506002818285816109a157fe5b0401816109aa57fe5b04905061098a565b506105c1565b81156105c15750600191905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220d89e1080a21cf083aad35fed750832269ead0d8064db5bab6d1f43c8c7afed6064736f6c63430007060033";
