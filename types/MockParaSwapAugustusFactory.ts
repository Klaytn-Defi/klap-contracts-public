/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockParaSwapAugustus } from "./MockParaSwapAugustus";

export class MockParaSwapAugustusFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockParaSwapAugustus> {
    return super.deploy(overrides || {}) as Promise<MockParaSwapAugustus>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockParaSwapAugustus {
    return super.attach(address) as MockParaSwapAugustus;
  }
  connect(signer: Signer): MockParaSwapAugustusFactory {
    return super.connect(signer) as MockParaSwapAugustusFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockParaSwapAugustus {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockParaSwapAugustus;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromAmountMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fromAmountMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "expectSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenTransferProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161001d9061004f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060601b6001600160601b03191660805261005c565b61051b8061067783390190565b60805160601c6105fa61007d6000398060ec528061020252506105fa6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b166d5f014610046578063d2c4b5981461005b578063fe02915614610079575b600080fd5b6100596100543660046103e2565b610099565b005b6100636100ea565b6040516100709190610455565b60405180910390f35b61008c6100873660046103a1565b61010e565b60405161007091906105bb565b60008054600160ff199091168117610100600160a81b0319166101006001600160a01b03988916021790915580546001600160a01b0319169490951693909317909355600255600391909155600455565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000805460ff1661013a5760405162461bcd60e51b815260040161013190610533565b60405180910390fd5b6000546001600160a01b03868116610100909204161461016c5760405162461bcd60e51b81526004016101319061058c565b6001546001600160a01b038581169116146101995760405162461bcd60e51b81526004016101319061055f565b60025483101580156101ad57506003548311155b6101c95760405162461bcd60e51b8152600401610131906104fc565b8160045410156101eb5760405162461bcd60e51b8152600401610131906104ac565b604051630aed65f560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906315dacbea9061023d908890339030908990600401610482565b600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b50506004805460405163140e25ad60e31b81526001600160a01b038916945063a0712d68935061029b92016105bb565b602060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed919061042e565b506004805460405163a9059cbb60e01b81526001600160a01b0387169263a9059cbb9261031c92339201610469565b602060405180830381600087803b15801561033657600080fd5b505af115801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e919061042e565b50506000805460ff19169055600454949350505050565b80356001600160a01b038116811461039c57600080fd5b919050565b600080600080608085870312156103b6578384fd5b6103bf85610385565b93506103cd60208601610385565b93969395505050506040820135916060013590565b600080600080600060a086880312156103f9578081fd5b61040286610385565b945061041060208701610385565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561043f578081fd5b8151801515811461044e578182fd5b9392505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60208082526030908201527f526563656976656420616d6f756e74206f6620746f6b656e7320617265206c6560408201526f1cdcc81d1a185b88195e1c1958dd195960821b606082015260800190565b60208082526018908201527f46726f6d20616d6f756e74206f7574206f662072616e67650000000000000000604082015260600190565b60208082526012908201527104e6f7420657870656374696e6720737761760741b604082015260600190565b6020808252601390820152722ab732bc3832b1ba32b2103a37903a37b5b2b760691b604082015260600190565b6020808252601590820152742ab732bc3832b1ba32b210333937b6903a37b5b2b760591b604082015260600190565b9081526020019056fea2646970667358221220e681ef59b1e6da163c649e7af2bd72abf7e880e11371d64a92420cf9ddad9c2964736f6c63430007060033608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61049e8061007d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806315dacbea14610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008c575b600080fd5b61006461005f3660046103a0565b61009f565b005b610064610192565b610076610246565b604051610083919061040a565b60405180910390f35b61006461009a36600461037f565b610255565b6100a761035f565b6000546001600160a01b03908116911614610109576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906101399086908690869060040161041e565b602060405180830381600087803b15801561015357600080fd5b505af1158015610167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018b91906103ea565b5050505050565b61019a61035f565b6000546001600160a01b039081169116146101fc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61025d61035f565b6000546001600160a01b039081169116146102bf576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103045760405162461bcd60e51b81526004018080602001828103825260268152602001806104436026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80356001600160a01b038116811461037a57600080fd5b919050565b600060208284031215610390578081fd5b61039982610363565b9392505050565b600080600080608085870312156103b5578283fd5b6103be85610363565b93506103cc60208601610363565b92506103da60408601610363565b9396929550929360600135925050565b6000602082840312156103fb578081fd5b81518015158114610399578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220c3d321ce8d2615dffbcaace255adcaf8ef8d5075ae1760dedcf9b604814e079d64736f6c63430007060033";
