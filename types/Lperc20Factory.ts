/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Lperc20 } from "./Lperc20";

export class Lperc20Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    _token0: string,
    _token1: string,
    overrides?: Overrides
  ): Promise<Lperc20> {
    return super.deploy(
      name,
      symbol,
      decimals,
      _token0,
      _token1,
      overrides || {}
    ) as Promise<Lperc20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    _token0: string,
    _token1: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals,
      _token0,
      _token1,
      overrides || {}
    );
  }
  attach(address: string): Lperc20 {
    return super.attach(address) as Lperc20;
  }
  connect(signer: Signer): Lperc20Factory {
    return super.connect(signer) as Lperc20Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lperc20 {
    return new Contract(address, _abi, signerOrProvider) as Lperc20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint_other",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012d7380380620012d7833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604090815260208281015191830151606090930151875192955092935086918691620001cb91600391850190620003f3565b508051620001e1906004906020840190620003f3565b50506005805460ff1916601217905550620001fc8362000263565b60058054610100600160a81b0319166101006001600160a01b038581169190910291909117909155600680546001600160a01b031916918316919091179055620002586200024962000279565b670de0b6b3a76400006200027d565b50505050506200049f565b6005805460ff191660ff92909216919091179055565b3390565b6001600160a01b038216620002d9576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620002e7600083836200038c565b62000303816002546200039160201b6200072f1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620003369183906200072f62000391821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620003ec576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200042b576000855562000476565b82601f106200044657805160ff191683800117855562000476565b8280016001018555821562000476579182015b828111156200047657825182559160200191906001019062000459565b506200048492915062000488565b5090565b5b8082111562000484576000815560010162000489565b610e2880620004af6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806352b2c3d311610097578063a457c2d711610066578063a457c2d714610336578063a9059cbb14610362578063d21220a71461038e578063dd62ed3e1461039657610100565b806352b2c3d3146102bf57806370a08231146102eb57806395d89b4114610311578063a0712d681461031957610100565b806318160ddd116100d357806318160ddd1461022557806323b872dd1461023f578063313ce56714610275578063395093511461029357610100565b806306fdde03146101055780630902f1ac14610182578063095ea7b3146101c15780630dfe168114610201575b600080fd5b61010d6103c4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018a61045a565b604080516dffffffffffffffffffffffffffff948516815292909316602083015263ffffffff168183015290519081900360600190f35b6101ed600480360360408110156101d757600080fd5b506001600160a01b038135169060200135610472565b604080519115158252519081900360200190f35b61020961048f565b604080516001600160a01b039092168252519081900360200190f35b61022d6104a3565b60408051918252519081900360200190f35b6101ed6004803603606081101561025557600080fd5b506001600160a01b038135811691602081013590911690604001356104a9565b61027d610530565b6040805160ff9092168252519081900360200190f35b6101ed600480360360408110156102a957600080fd5b506001600160a01b038135169060200135610539565b6101ed600480360360408110156102d557600080fd5b506001600160a01b038135169060200135610587565b61022d6004803603602081101561030157600080fd5b50356001600160a01b03166105e2565b61010d6105fd565b6101ed6004803603602081101561032f57600080fd5b503561065e565b6101ed6004803603604081101561034c57600080fd5b506001600160a01b038135169060200135610679565b6101ed6004803603604081101561037857600080fd5b506001600160a01b0381351690602001356106e1565b6102096106f5565b61022d600480360360408110156103ac57600080fd5b506001600160a01b0381358116916020013516610704565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b5050505050905090565b678ac7230489e80000670b1a2bc2ec50000042909192565b600061048661047f610790565b8484610794565b50600192915050565b60055461010090046001600160a01b031681565b60025490565b60006104b6848484610880565b610526846104c2610790565b61052185604051806060016040528060288152602001610d5d602891396001600160a01b038a16600090815260016020526040812090610500610790565b6001600160a01b0316815260208101919091526040016000205491906109db565b610794565b5060019392505050565b60055460ff1690565b6000610486610546610790565b846105218560016000610557610790565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061072f565b60006105b16040518060400160405280600681526020016539b2b73232b960d11b81525084610a72565b6105d86040518060400160405280600581526020016476616c756560d81b81525083610b2d565b6104868383610bdb565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104505780601f1061042557610100808354040283529160200191610450565b600061067161066b610790565b83610bdb565b506001919050565b6000610486610686610790565b8461052185604051806060016040528060258152602001610dce60259139600160006106b0610790565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906109db565b60006104866106ee610790565b8484610880565b6006546001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610789576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166107d95760405162461bcd60e51b8152600401808060200182810382526024815260200180610daa6024913960400191505060405180910390fd5b6001600160a01b03821661081e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610d156022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108c55760405162461bcd60e51b8152600401808060200182810382526025815260200180610d856025913960400191505060405180910390fd5b6001600160a01b03821661090a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610cf26023913960400191505060405180910390fd5b610915838383610ccb565b61095281604051806060016040528060268152602001610d37602691396001600160a01b03861660009081526020819052604090205491906109db565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610981908261072f565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a6a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a2f578181015183820152602001610a17565b50505050905090810190601f168015610a5c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b610b2982826040516024018080602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015610ac6578181015183820152602001610aae565b50505050905090810190601f168015610af35780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790529350610cd092505050565b5050565b610b2982826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610b78578181015183820152602001610b60565b50505050905090810190601f168015610ba55780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790529350610cd092505050565b6001600160a01b038216610c36576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c4260008383610ccb565b600254610c4f908261072f565b6002556001600160a01b038216600090815260208190526040902054610c75908261072f565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa505050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a45d8ce039af4cc1b9559fe3bb291457702908daf602fbca2c4b1d456b42471464736f6c63430007060033";
